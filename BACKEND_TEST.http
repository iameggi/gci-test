@baseurl = http://localhost:8000
@token_backend = 25|WArLL9GVC0xEH2YvTz7ou1j9PqjA0wvW00Kkgbvn1dd73458



##################################
#          AUTH SECTION          #
##################################

### Login
POST {{baseurl}}/api/login
Content-Type: application/json

{
    "email": "ayaka@dosen.com",
    "password": "masuk123"
}

### Register (User)
POST {{baseurl}}/api/register
Content-Type: application/json

{
    "name": "Udin penyok",
    "email": "udin21@mahasiswa.com",
    "password": "masuk123",
    "password_confirmation": "masuk123",
    "role": "mahasiswa"
}

### Logout
POST {{baseurl}}/api/logout
Authorization: Bearer {{token_backend}}



##################################
#         COURSE SECTION          #
##################################

### Get all courses
GET {{baseurl}}/api/courses
Authorization: Bearer {{token_backend}}

### Create new course (Dosen)
POST {{baseurl}}/api/courses
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "name": "Embed system",
    "description": "Learn rust embed system"
}

### Get courses by lecturer (Dosen)
GET {{baseurl}}/api/courses/me
Authorization: Bearer {{token_backend}}

### Get single course by lecturer
GET {{baseurl}}/api/courses/me/3
Authorization: Bearer {{token_backend}}

### Update course (Dosen)
PUT {{baseurl}}/api/courses/2
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "name": "Rest API",
    "description": "Belajar Laravel"
}

### Delete course (Dosen)
DELETE {{baseurl}}/api/courses/3
Authorization: Bearer {{token_backend}}


####### Student Course Actions #######

### Enroll course
POST {{baseurl}}/api/courses/1/enroll
Authorization: Bearer {{token_backend}}

### Get enrolled courses
GET {{baseurl}}/api/courses/enrolled
Authorization: Bearer {{token_backend}}



##################################
#        MATERIAL SECTION         #
##################################

### Upload material (Dosen)
POST {{baseurl}}/api/materials
Authorization: Bearer {{token_backend}}
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="course_id"

1
--boundary
Content-Disposition: form-data; name="title"

Golang application REST API
--boundary
Content-Disposition: form-data; name="file"; filename="sample.pdf"
Content-Type: application/pdf

< ./FILEEXTERNAL/MATERIAL/sample.pdf
--boundary--

### Delete material (Dosen)
DELETE {{baseurl}}/api/materials/1
Authorization: Bearer {{token_backend}}

### Get materials per course (Mahasiswa)
GET {{baseurl}}/api/materials?course_id=1
Authorization: Bearer {{token_backend}}

### Download material (Mahasiswa)
GET {{baseurl}}/api/materials/1/download
Authorization: Bearer {{token_backend}}



##################################
#        ASSIGNMENT SECTION       #
##################################

### Get my assignments (Dosen)
GET {{baseurl}}/api/assignments/my-assignments
Authorization: Bearer {{token_backend}}

### Get specific assignment detail (Dosen)
GET {{baseurl}}/api/assignments/my-assignments/1
Authorization: Bearer {{token_backend}}

### Create new assignment (Dosen)
POST {{baseurl}}/api/assignments
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "course_id": 1,
    "title": "Tugas 2 - Membuat REST API",
    "description": "Buat REST API sederhana menggunakan Java Spring Boot",
    "deadline": "2025-10-10 23:59:59"
}

### Grade submission (Dosen)
POST {{baseurl}}/api/submissions/1/grade
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "score": 85
}

### Get assignments by course (Dosen/Mahasiswa)
GET {{baseurl}}/api/assignments?course_id=1
Authorization: Bearer {{token_backend}}



####### Student Assignment Actions #######

### Upload submission (Mahasiswa)
POST {{baseurl}}/api/submissions
Authorization: Bearer {{token_backend}}
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="assignment_id"

1
--boundary
Content-Disposition: form-data; name="file"; filename="sample.zip"
Content-Type: application/zip

< ./FILEEXTERNAL/TUGAS/sample.zip
--boundary--

### Get my submissions (Mahasiswa)
GET {{baseurl}}/api/submissions/me
Authorization: Bearer {{token_backend}}



##################################
#        DISCUSSION SECTION       #
##################################

### Create discussion
POST {{baseurl}}/api/discussions
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "course_id": 1,
    "content": "Hallo semuanya bagaimana best practice dalam menangani data skala besar??"
}

### Get discussions per course
GET {{baseurl}}/api/discussions?course_id=1
Authorization: Bearer {{token_backend}}

### Reply to discussion
POST {{baseurl}}/api/discussions/1/replies
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "content": "Mantap, coba pakai concurrency dan efisiensi data gan."
}

### Get discussion with replies
GET {{baseurl}}/api/discussions/1
Authorization: Bearer {{token_backend}}

### Edit discussion (Owner only)
PUT {{baseurl}}/api/discussions/1
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "content": "test (UPDATED)"
}

### Delete discussion (Owner only)
DELETE {{baseurl}}/api/discussions/1
Authorization: Bearer {{token_backend}}

### Edit reply
PUT {{baseurl}}/api/replies/1
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "content": "aku adalahe dit"
}

### Delete reply
DELETE {{baseurl}}/api/replies/1
Authorization: Bearer {{token_backend}}



##################################
#        REPORT SECTION           #
##################################

### Report: Courses
GET {{baseurl}}/api/reports/courses
Authorization: Bearer {{token_backend}}

### Report: Assignments
GET {{baseurl}}/api/reports/assignments
Authorization: Bearer {{token_backend}}

### Report: Student by ID
GET {{baseurl}}/api/reports/students/1
Authorization: Bearer {{token_backend}}
