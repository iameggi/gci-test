@baseurl = http://localhost:8000
@token_backend = 21|0Tc1DaplODXUioH7xgG1nBJ5uhyzmHzVaJmeM1nlc4465359



################################## AUTH ################################


### Login

POST {{baseurl}}/api/login
Content-Type: application/json

{
    "email": "eggy@mahasiswa.com",
    "password": "masuk123"
}



### Register USER

POST {{baseurl}}/api/register
Content-Type: application/json

{
    "name": "Goshiki",
    "email": "goshi@dosen.com",
    "password": "masuk123",
    "password_confirmation": "masuk123",
    "role": "dosen"
}


### logout

POST {{baseurl}}/api/logout
Authorization: Bearer {{token_backend}}


################################## Course ################################

### Get all course

GET {{baseurl}}/api/courses
Authorization: Bearer {{token_backend}}


### Create new course (dosen/leacture)

POST {{baseurl}}/api/courses
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "name": "Embed system",
    "description": "Learn rust embed system"
}


### Read course leacture/ dosen 
GET {{baseurl}}/api/courses/me
Authorization: Bearer {{token_backend}}


### Read course leacture by id
GET {{baseurl}}/api/courses/me/3
Authorization: Bearer {{token_backend}}


### Update course leacture
PUT {{baseurl}}/api/courses/2
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "name": "Rest api",
    "description": "Belajar Laravel"
}


### Delete course lecture
DELETE {{baseurl}}/api/courses/3
Authorization: Bearer {{token_backend}}


############ for student


### Student enroll 

POST {{baseurl}}/api/courses/4/enroll
Authorization: Bearer {{token_backend}}


### Student get enroled
GET {{baseurl}}/api/courses/enrolled
Authorization: Bearer {{token_backend}}


############### Material  #######################


### Get material per course



### Upload Material leacture(Dosen)

POST {{baseurl}}/api/materials
Authorization: Bearer {{token_backend}}
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="course_id"

1
--boundary
Content-Disposition: form-data; name="title"

Golang application REST API
--boundary
Content-Disposition: form-data; name="file"; filename="sample.pdf"
Content-Type: application/pdf

< ./FILEEXTERNAL/MATERIAL/sample.pdf
--boundary--



### Delete Material leacture (Dosen)
DELETE {{baseurl}}/api/materials/1
Authorization: Bearer {{token_backend}}


### Get per Course student
GET {{baseurl}}/api/materials?course_id=1
Authorization: Bearer {{token_backend}}


### Download Material student
GET {{baseurl}}/api/materials/1/download
Authorization: Bearer {{token_backend}}


##################### Create Assegment =======================


### GET ASSIGMENT CREATED BE ME! LEACTURE / DOSEN

GET {{baseurl}}/api/assignments/my-assignments
Authorization: Bearer {{token_backend}}


### GET ASSIGMENT DETAIL! LEACTURE DOSEN
GET {{baseurl}}/api/assignments/my-assignments/1
Authorization: Bearer {{token_backend}}



### Create assigment (leacture/dosen)
POST {{baseurl}}/api/assignments
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "course_id": 1,
    "title": "Tugas 1 - Membuat REST API",
    "description": "Buat REST API sederhana menggunakan Golang",
    "deadline": "2025-10-10 23:59:59"
}


### Assigment grade (leacture /dosen)

POST {{baseurl}}/api/submissions/1/grade
Authorization: Bearer {{token_backend}}
Content-Type: application/json

{
    "score": 85
}


### Assigment get
GET {{baseurl}}/api/assignments?course_id=1
Authorization: Bearer {{token_backend}}
Content-Type: application/json







### Upload Submission (Student/Mahasiswa)
POST {{baseurl}}/api/submissions
Authorization: Bearer {{token_backend}}
Content-Type: multipart/form-data; boundary=boundary

--boundary
Content-Disposition: form-data; name="assignment_id"

1
--boundary
Content-Disposition: form-data; name="file"; filename="sample.pdf"
Content-Type: application/zip

< ./FILEEXTERNAL/TUGAS/sample.pdf
--boundary--


### GET ASSIGMENT MAHASISWA / STUDENT
GET {{baseurl}}/api/submissions/me
Authorization: Bearer {{token_backend}}

